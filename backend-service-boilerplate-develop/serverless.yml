# see https://www.serverless.com/framework/docs/providers/aws/guide/serverless.yml for more detail

service: backend-service-boilerplate

frameworkVersion: '3'

custom:
  project: homelens
  apiVersion: v1
  customDomain:
    basePath: boilerplate
    domainName: api.qingyouapp.me
    stage: ${self:provider.stage}
    certificateName: '*.qingyouapp.me'
    createRoute53Record: true
    endpointType: REGIONAL
    securityPolicy: tls_1_2
    apiType: http
    autoDomain: false

  webpack:
    webpackConfig: ./webpack.config.js 
    includeModules: true

  serverless-offline:
    host: 127.0.0.1
    httpPort: 42125
    lambdaPort: 42126

provider:
  # General settings
  name: aws
  stage: ${opt:stage}
  region: us-east-1
  profile: default
  tags:
    project: ${self:custom.project}
  stackTags:
    project: ${self:custom.project}
  tracing:
    apiGateway: false
    lambda: false
  # General function settings
  runtime: nodejs16.x
  memorySize: 256
  timeout: 10
  logRetentionInDays: 7 
  # Deployment bucket
  deploymentBucket:
    name: ${self:custom.project}-${self:provider.stage}-deploy # need to create it through aws console first
  # API Gateway v2 settings
  httpApi:
    disableDefaultEndpoint: true
    cors: true
  # IAM permissions
  iam:
    role:
      name: ${self:custom.apiVersion}-${self:service}-role
      statements:
        - Effect: 'Allow'
          Action: 'execute-api:Invoke'
          Resource: 'arn:aws:execute-api:${self:provider.region}:*:*'
  environment: 
    LOG_NAMESPACE: ${self:custom.apiVersion}-${self:service}

functions:
  api:
    handler: src/functions/api/index.severlessApp
    name: ${self:custom.apiVersion}-${self:service}-api
    events:
      - httpApi:
          method: GET
          path: /hello
          authorizer:
            type: aws_iam

package:
  patterns:
    - src/**/*.js
    - '!node_modules/aws-sdk/**'
    - '!src/**/*.test.js'
    - '!src/**/*.spec.js'
  individually: true

plugins: 
  - serverless-webpack
  - serverless-offline
  - serverless-domain-manager